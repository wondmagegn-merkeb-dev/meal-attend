
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Student {
  id                String             @id @default(cuid())
  studentId         String             @unique
  name              String
  gender            String?
  classGrade        String?
  profileImageURL   String?
  qrCodeData        String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  attendanceRecords AttendanceRecord[]
}

model User {
  id                     String    @id @default(cuid())
  userId                 String    @unique
  fullName               String
  email                  String    @unique
  passwordHash           String
  passwordChangeRequired Boolean   @default(true)
  role                   String      @default("User")
  profileImageURL        String?
  departmentId           String?
  department             Department? @relation(fields: [departmentId], references: [id], onDelete: SetNull)
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
}

model Department {
  id        String   @id @default(cuid())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AttendanceRecord {
  id                 String           @id @default(cuid())
  studentInternalId  String
  student            Student          @relation(fields: [studentInternalId], references: [id], onDelete: Cascade)
  recordDate         DateTime
  mealType           String
  status             String
  scannedAtTimestamp DateTime?
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt

  @@unique([studentInternalId, recordDate, mealType])
}

model UserActivityLog {
  id                String   @id @default(cuid())
  userIdentifier    String
  activityTimestamp DateTime @default(now())
}
